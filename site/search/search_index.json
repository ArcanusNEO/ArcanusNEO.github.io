{"config":{"lang":["ja"],"separator":"[\\s\\-\uff0c\u3002]+","pipeline":["stemmer"]},"docs":[{"location":"","title":"\u4e3b\u9875","text":"<p>\u4e5d\u5c18\u9053\u4eba</p> <p>\u8fd9\u91cc\u7684\u5fae\u7b11\u6bd4\u8f83\u6301\u4e45\uff0c\u8fd9\u91cc\u7684\u63e1\u624b\u6bd4\u8f83\u6709\u529b\u3002</p> <p>\u5173\u4e8e</p>"},{"location":"about/","title":"\u5173\u4e8e","text":"<p>\u672c\u7f51\u7ad9\u662f\u4e5d\u5c18\u9053\u4eba\u7684\u8d22\u4ea7\uff0c\u4fdd\u7559\u6240\u6709\u6743\u5229\u3002</p>"},{"location":"finalshell-password/","title":"FinalShell \u5bfc\u51fa\u5bc6\u7801\u89e3\u5bc6","text":"FinalShell \u5bfc\u51fa\u5bc6\u7801\u89e3\u5bc6 <p>\u5728\u7ebf Java \u7f16\u8bd1\u5668</p> <p>\u4f7f\u7528\u4e0b\u9762 Java \u7a0b\u5e8f\u53ef\u4ee5\u89e3\u5bc6\uff0c\u628a <code>TVE5YhZeGxyOCxxxxxxCUAnkVWgAeJ3L</code> \u66ff\u6362\u4e3a\u5b9e\u9645\u5bc6\u6587\u3002</p> <pre><code>import java.io.ByteArrayOutputStream;\nimport java.io.DataOutputStream;\nimport java.io.IOException;\nimport java.math.BigInteger;\nimport java.security.MessageDigest;\nimport java.security.NoSuchAlgorithmException;\nimport java.security.SecureRandom;\nimport java.util.Base64;\nimport java.util.Random;\n\nimport javax.crypto.Cipher;\nimport javax.crypto.SecretKey;\nimport javax.crypto.SecretKeyFactory;\nimport javax.crypto.spec.DESKeySpec;\n\npublic class FinalShellDecodePass {\n    public static void main(String[] args)throws Exception {\n        System.out.println(decodePass(\"TVE5YhZeGxyOCxxxxxxCUAnkVWgAeJ3L\"));\n    }\n    public static byte[] desDecode(byte[] data, byte[] head) throws Exception {\n        SecureRandom sr = new SecureRandom();\n        DESKeySpec dks = new DESKeySpec(head);\n        SecretKeyFactory keyFactory = SecretKeyFactory.getInstance(\"DES\");\n        SecretKey securekey = keyFactory.generateSecret(dks);\n        Cipher cipher = Cipher.getInstance(\"DES\");\n        cipher.init(2, securekey, sr);\n        return cipher.doFinal(data);\n    }\n    public static String decodePass(String data) throws Exception {\n        if (data == null) {\n            return null;\n        } else {\n            String rs = \"\";\n            byte[] buf = Base64.getDecoder().decode(data);\n            byte[] head = new byte[8];\n            System.arraycopy(buf, 0, head, 0, head.length);\n            byte[] d = new byte[buf.length - head.length];\n            System.arraycopy(buf, head.length, d, 0, d.length);\n            byte[] bt = desDecode(d, ranDomKey(head));\n            rs = new String(bt);\n\n            return rs;\n        }\n    }\n    static byte[] ranDomKey(byte[] head) {\n        long ks = 3680984568597093857L / (long)(new Random((long)head[5])).nextInt(127);\n        Random random = new Random(ks);\n        int t = head[0];\n\n        for(int i = 0; i &lt; t; ++i) {\n            random.nextLong();\n        }\n\n        long n = random.nextLong();\n        Random r2 = new Random(n);\n        long[] ld = new long[]{(long)head[4], r2.nextLong(), (long)head[7], (long)head[3], r2.nextLong(), (long)head[1], random.nextLong(), (long)head[2]};\n        ByteArrayOutputStream bos = new ByteArrayOutputStream();\n        DataOutputStream dos = new DataOutputStream(bos);\n        long[] var15 = ld;\n        int var14 = ld.length;\n\n        for(int var13 = 0; var13 &lt; var14; ++var13) {\n            long l = var15[var13];\n\n            try {\n                dos.writeLong(l);\n            } catch (IOException var18) {\n                var18.printStackTrace();\n            }\n        }\n\n        try {\n            dos.close();\n        } catch (IOException var17) {\n            var17.printStackTrace();\n        }\n\n        byte[] keyData = bos.toByteArray();\n        keyData = md5(keyData);\n        return keyData;\n    }\n    public static byte[] md5(byte[] data) {\n        String ret = null;\n        byte[] res=null;\n\n        try {\n            MessageDigest m;\n            m = MessageDigest.getInstance(\"MD5\");\n            m.update(data, 0, data.length);\n            res=m.digest();\n            ret = new BigInteger(1, res).toString(16);\n        } catch (NoSuchAlgorithmException e) {\n            e.printStackTrace();\n        }\n        return res;\n    }\n}\n\n</code></pre>"},{"location":"navicat-for-arch/","title":"Arch Linux \u4e0a\u4f7f\u7528 Navicat","text":"Arch Linux \u4e0a\u4f7f\u7528 Navicat <p>Navicat 15 \u8fde\u63a5 PostgreSQL 15.2+ \u4f1a\u62a5\u9519\uff0c\u4f3c\u4e4e\u662f\u517c\u5bb9\u6027\u95ee\u9898\uff0c\u4e0d\u5f97\u4e0d\u5347\u7ea7 Navicat 16\u3002</p> <p>\u66fe\u7ecf\u7684\u7834\u89e3\u7ad9\u5df2\u7ecf\u6253\u4e0d\u5f00\u4e86\uff0c\u4e0d\u8fc7\u53c8\u627e\u5230\u4e86\u65b0\u7684\uff1anavicat.rainss.cc\u3002</p> <p>\u7834\u89e3 Navicat 16 \u7684\u539f\u7406\u5e94\u8be5\u662f\u66ff\u6362\u5199\u5728\u7a0b\u5e8f\u4e2d\u7684\u516c\u94a5\uff0c\u518d\u7528\u6ce8\u518c\u673a\u7b97\u51fa\u6fc0\u6d3b\u7801\uff0c\u5982\u679c\u4e0d\u624b\u52a8 Patch \u5c31\u53ea\u80fd\u5b89\u88c5\u7834\u89e3\u7ad9\u63d0\u4f9b\u7684\u4fee\u6539\u7248\u672c\u4f53\u3002\u4e0d\u8bba\u4ece\u5b89\u88c5\u8fd8\u662f\u66f4\u65b0\u89d2\u5ea6\u90fd\u7565\u663e\u9ebb\u70e6\uff0c\u5b89\u5168\u6027\u4e5f\u4e0d\u80fd\u8ba9\u4eba\u653e\u5fc3\u3002\u5982\u679c\u4e0d\u4f9d\u9760\u641e\u9006\u5411\uff0c\u5e76\u4e14\u80fd\u8ba9 AUR Helper \u81ea\u52a8\u5904\u7406\u4e00\u5207\u66f4\u65b0\u5c31\u4f1a\u7701\u5fc3\u5f88\u591a\u3002\u56e0\u6b64\u51b3\u5b9a\u6539\u7528\u65e0\u9650\u8bd5\u7528\u7684\u65b9\u6cd5\u89c4\u907f\u6fc0\u6d3b\u3002</p> <p>\u6211\u5b89\u88c5\u7684\u662f <code>navicat16-premium-cs</code> \u8fd9\u4e2a\u5305\u3002</p> <p>\u4f7f\u7528 <code>navicat-reset-trial</code> \u811a\u672c\u91cd\u7f6e\u6fc0\u6d3b\u4fe1\u606f\uff1a</p> <pre><code>#!/bin/bash\ndconf reset -f /com/premiumsoft/navicat-premium/\nrm -f -- $HOME/.config/navicat/Premium/preferences.json*\n</code></pre> <p>\u4f7f\u7528 <code>navicat16-premium-cs</code> \u811a\u672c\u542f\u52a8\u7a0b\u5e8f\u5e76\u5173\u95ed\u6fc0\u6d3b\u5f39\u7a97\uff1a</p> <pre><code>#!/bin/bash\nnavicat-reset-trial\nwhile true; do\n  xdotool windowquit $(xwinid '\u6ce8\u518c') &amp;&amp; exit 0\n  sleep 0.5\ndone &amp;\nexec /opt/navicat16-premium-cs/AppRun\n</code></pre> <p>\u4f7f\u7528 Pacman Hook <code>navicat16-premium-cs.hook</code> \u81ea\u52a8\u66ff\u6362 <code>navicat16.desktop</code> \u7684 <code>Exec</code> \u5b57\u6bb5\uff1a</p> <pre><code>[Trigger]\nOperation=Install\nOperation=Upgrade\nType=Package\nTarget=navicat16-premium-cs\n\n[Action]\nDescription=Hacking for unlimited trial...\nWhen=PostTransaction\nExec=/usr/bin/sed -i 's|^Exec=.*$|Exec=navicat16-premium-cs|g' /usr/share/applications/navicat16.desktop\n</code></pre>"}]}