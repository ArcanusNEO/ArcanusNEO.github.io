{"config":{"lang":["ja"],"separator":"[\\s\\-\uff0c\u3002]+","pipeline":["stemmer"]},"docs":[{"location":"","title":"\u4e3b\u9875","text":"<p>\u4e5d\u5c18\u9053\u4eba</p> <p>\u8fd9\u91cc\u7684\u5fae\u7b11\u6bd4\u8f83\u6301\u4e45\uff0c\u8fd9\u91cc\u7684\u63e1\u624b\u6bd4\u8f83\u6709\u529b\u3002</p> <p>\u5173\u4e8e</p>"},{"location":"about/","title":"\u5173\u4e8e","text":"<p>\u672c\u7f51\u7ad9\u662f\u4e5d\u5c18\u9053\u4eba\u7684\u8d22\u4ea7\uff0c\u4fdd\u7559\u6240\u6709\u6743\u5229\u3002</p>"},{"location":"finalshell-password/","title":"FinalShell \u5bfc\u51fa\u5bc6\u7801\u89e3\u5bc6","text":"<p>\u4f7f\u7528\u4e0b\u9762 Java \u7a0b\u5e8f\u53ef\u4ee5\u89e3\u5bc6\uff0c<code>TVE5YhZeGxyOCxxxxxxCUAnkVWgAeJ3L</code> \u66ff\u6362\u4e3a\u5b9e\u9645\u5bc6\u6587\u3002</p> <p>\u5728\u7ebf Java \u7f16\u8bd1\u5668</p> <pre><code>import java.io.ByteArrayOutputStream;\nimport java.io.DataOutputStream;\nimport java.io.IOException;\nimport java.math.BigInteger;\nimport java.security.MessageDigest;\nimport java.security.NoSuchAlgorithmException;\nimport java.security.SecureRandom;\nimport java.util.Base64;\nimport java.util.Random;\n\nimport javax.crypto.Cipher;\nimport javax.crypto.SecretKey;\nimport javax.crypto.SecretKeyFactory;\nimport javax.crypto.spec.DESKeySpec;\n\npublic class FinalShellDecodePass {\n    public static void main(String[] args)throws Exception {\n        System.out.println(decodePass(\"TVE5YhZeGxyOCxxxxxxCUAnkVWgAeJ3L\"));\n    }\n    public static byte[] desDecode(byte[] data, byte[] head) throws Exception {\n        SecureRandom sr = new SecureRandom();\n        DESKeySpec dks = new DESKeySpec(head);\n        SecretKeyFactory keyFactory = SecretKeyFactory.getInstance(\"DES\");\n        SecretKey securekey = keyFactory.generateSecret(dks);\n        Cipher cipher = Cipher.getInstance(\"DES\");\n        cipher.init(2, securekey, sr);\n        return cipher.doFinal(data);\n    }\n    public static String decodePass(String data) throws Exception {\n        if (data == null) {\n            return null;\n        } else {\n            String rs = \"\";\n            byte[] buf = Base64.getDecoder().decode(data);\n            byte[] head = new byte[8];\n            System.arraycopy(buf, 0, head, 0, head.length);\n            byte[] d = new byte[buf.length - head.length];\n            System.arraycopy(buf, head.length, d, 0, d.length);\n            byte[] bt = desDecode(d, ranDomKey(head));\n            rs = new String(bt);\n\n            return rs;\n        }\n    }\n    static byte[] ranDomKey(byte[] head) {\n        long ks = 3680984568597093857L / (long)(new Random((long)head[5])).nextInt(127);\n        Random random = new Random(ks);\n        int t = head[0];\n\n        for(int i = 0; i &lt; t; ++i) {\n            random.nextLong();\n        }\n\n        long n = random.nextLong();\n        Random r2 = new Random(n);\n        long[] ld = new long[]{(long)head[4], r2.nextLong(), (long)head[7], (long)head[3], r2.nextLong(), (long)head[1], random.nextLong(), (long)head[2]};\n        ByteArrayOutputStream bos = new ByteArrayOutputStream();\n        DataOutputStream dos = new DataOutputStream(bos);\n        long[] var15 = ld;\n        int var14 = ld.length;\n\n        for(int var13 = 0; var13 &lt; var14; ++var13) {\n            long l = var15[var13];\n\n            try {\n                dos.writeLong(l);\n            } catch (IOException var18) {\n                var18.printStackTrace();\n            }\n        }\n\n        try {\n            dos.close();\n        } catch (IOException var17) {\n            var17.printStackTrace();\n        }\n\n        byte[] keyData = bos.toByteArray();\n        keyData = md5(keyData);\n        return keyData;\n    }\n    public static byte[] md5(byte[] data) {\n        String ret = null;\n        byte[] res=null;\n\n        try {\n            MessageDigest m;\n            m = MessageDigest.getInstance(\"MD5\");\n            m.update(data, 0, data.length);\n            res=m.digest();\n            ret = new BigInteger(1, res).toString(16);\n        } catch (NoSuchAlgorithmException e) {\n            e.printStackTrace();\n        }\n        return res;\n    }\n}\n\n</code></pre>"}]}